{"cells":[{"cell_type":"markdown","metadata":{},"source":["\u003cp style=\"text-align:center\"\u003e\n","    \u003ca href=\"https://skills.network/?utm_medium=Exinfluencer\u0026utm_source=Exinfluencer\u0026utm_content=000026UJ\u0026utm_term=10006555\u0026utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkPY0101ENSkillsNetwork19487395-2022-01-01\" target=\"_blank\"\u003e\n","    \u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/assets/logos/SN_web_lightmode.png\" width=\"200\" alt=\"Skills Network Logo\"  /\u003e\n","    \u003c/a\u003e\n","\u003c/p\u003e\n","\n","# Lab: Using Markdowns in Jupyter Notebooks\n","\n","Estimated time needed: **15** minutes\n","\n","Jupyter Notebooks are composed of code and markdown cells. Markdown cells are used to present text, images, etc. and are useful to document and explain the contents of your notebook. In this lab you will become familiar with writing markdown.\n","\n","## Objectives\n","\n","After completing this lab, you will be able to:\n","*\tIdentify which Kernel your Jupyter notebook is running\n","*\tCreate headings, and add text in bold and italics in Markdown\n","*\tInsert links and images using Markdown\n","*\tCreate Tables in Markdown\n","*\tCreate ordered and unordered lists in Markdown\n","*\tDemonstrate your proficiency in using Markdown in Jupyter notebooks\n"]},{"cell_type":"markdown","metadata":{},"source":["# Exercise 1 \n","\n","### Kernels in Jupyter notebook\n","\n","* A notebook kernel is a computational engine that executes the code in a Notebook file. \n","  \n","* When the notebook is executed, the kernel performs the computation and produces the results. \n","\n","* The top right corner tells you what kind of kernel it is. For instance, in JupyterLite, the default kernel is **Pyolite**. Similarly, if you are working on JupyterLab, the kernel will be **Python 3** or **Python 2**, depending on the version.\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/kernelforjupyterlite.jpg\"\u003e\n","\n","\n","* You can also run other kernels by choosing the preferred kernel on the **launch page** or by clicking the top right to switch the kernel to the preferred kernel and picking the kernel from the drop-down menu. \n","\n","* When the kernel is in execution, the state of the kernel is changed from **Idle** to **Running** state.\n","\n","#### Try yourself:\n"]},{"cell_type":"markdown","metadata":{},"source":["* Click the running Kernel, For Example, **Pyolite**, to see which other kernels are available.\u003cbr/\u003e\n","\n","  \u003e _Please don't switch the existing kernel._\n"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","The output looks as:\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/kernel2.png\"\u003e\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["* Check the state of the kernel by clicking on the circle next to it.\n"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","The output looks as:\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/kernel3.png\"\u003e\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["# Exercise 2\n","### Create headings, and add text in bold and italics in Markdown\n","\n","Let us explore basic markdown elements such as: \n","* Headings\n","* Bold Text\n","* ItalicText\n","\n","\n"]},{"cell_type":"markdown","metadata":{},"source":["### Headings:\n","\n","* You can create headings by adding a \u003ccode\u003e#\u003c/code\u003e sign before a **word** or a **phrase**.\n","\n","   * There are six levels of headings.\n","   * The number sign \u003ccode\u003e#\u003c/code\u003e indicate the level of heading for example **# Hello** corresponds to **level 1**,the highest level heading.\n","   * Display the following text using six different heading levels.\n","      * H1: This is a level 1 Heading\n","      * H2: This is a level 2 Heading\n","      * H3: This is a level 3 Heading\n","      * H4: This is a level 4 Heading\n","      * H5: This is a level 5 Heading\n","      * H6: This is a level 6 Heading\n"," \u003e Recall: to convert a code cell to markdown, first click inside the cell, then on the dropdown labelled **\"Code\"** in the toolbar bar and select **\"Markdown\"**. To run a cell, click inside the cell then press \u003ckbd\u003eShift+Enter keys\u003c/kbd\u003e together.    \n","   \u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/markdown1.png\"\u003e\n","   \n","   * Convert the cell below to markdown cell and execute it.\n","   * To see or edit the contents of a rendered Markdown cell  after running it double-click on the cell. \n"]},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":["# Execute it as a markdown cell\n","# H1: This is a level 1 Heading\n","## H2: This is a level 2 Heading\n","### H3: This is a level 3 Heading\n","#### H4: This is a level 4 Heading\n","##### H5: This is a level 5 Heading\n","###### H6: This is a level 6 Heading"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","The output looks as:\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/markdown3.png\"\u003e\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/markdown2.png\"\u003e\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["### Bold Text\n","\n","* You can create bold text by adding two asterisks or underscores before and after a word,phrase or a sentence.\n","\n","* Convert the cell below to markdown cell and execute it.\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["# Execute it as a markdown cell\n","**Bold Text using asterisks.**  \n","__Bold Text using underscores.__"]},{"cell_type":"markdown","metadata":{},"source":["### Italic Text\n","\n","* You can display text in italics by adding a single asterisk or underscore before and after a word,phrase or a sentence.\n","\n","* Convert the cell below to markdown cell and execute it.\n"]},{"cell_type":"markdown","metadata":{},"source":["# Execute it as a markdown cell\n","*Text in italics using asterisk.*  \n","_Text in italics using underscore._\n"]},{"cell_type":"markdown","metadata":{},"source":["### Bold and Italic text\n","* You can display text in both bold and italic style at the same time by adding a three asterisks or underscores before and after a word,phrase or a sentence.\n","\n","* Convert the cell below to markdown cell and execute it.\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["# Execute it as a markdown cell\n","***Bold and Italic text using asterisks.***  \n","___Bold and Italic text using underscores.___"]},{"cell_type":"markdown","metadata":{},"source":["# Exercise 3\n","### Insert links and images using Markdown\n","\n","* Hyperlinks\n","* Images\n"]},{"cell_type":"markdown","metadata":{},"source":["### Hyperlinks\n","You can create a **hyperlink** in the following format.\n","\n","\u003cimg src=\"https://raw.githubusercontent.com/Lakshmiholla-2808/first/main/hyper1.png\"\u003e\n","\n","* **Name of the link** is the clickable link text\n","* **Link url** is the web address of the url which will be directed on clicking the link.\n","* To display a clickable link without a name enclose the link in angle brackets.\n","\u0026lt;https://skills.network/ \u0026gt;\n","\n","_Convert the code cell below to a markdown cell. Then create a hyperlink to the webpage **https://skills.network** with the **Name of the Link** as \"Skills Network\". Then execute the code._\n"]},{"cell_type":"code","execution_count":3,"metadata":{"trusted":true},"outputs":[{"ename":"\u003cclass 'SyntaxError'\u003e","evalue":"invalid syntax. Perhaps you forgot a comma? (\u003cipython-input-3-1ec62516b954\u003e, line 2)","output_type":"error","traceback":["\u001b[0;36m  Cell \u001b[0;32mIn [3], line 2\u001b[0;36m\u001b[0m\n\u001b[0;31m    [Skills Network](https://skills.network/)\u001b[0m\n\u001b[0m     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax. Perhaps you forgot a comma?\n"]}],"source":["# Execute it as a markdown cell\n","[Skills Network](https://skills.network/) "]},{"cell_type":"markdown","metadata":{},"source":["### Images\n","\n","Images can be rendered in the following format.\n","     \n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/image.png\"\u003e\n","\n","Convert the cell below to markdown cell and execute it.\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["# Execute it as a markdown cell\n","LOGO: ![This is the skills network logo](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/assets/logos/SN_web_lightmode.png)"]},{"cell_type":"markdown","metadata":{},"source":["# Exercise 4 \n","\n","### Create Tables in Markdown\n","\n","To create tables, use: \n","* **hyphens** \u003ccode\u003e(----)\u003c/code\u003e for column headers \n","* **pipes** \u003ccode\u003e|\u003c/code\u003e to separate each column\n","* **Text on a new line** to separate each row\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/tabledisp.png\"\u003e\n","\n","_Convert the code cell below to a markdown cell. Then recreate the example table above and execute the code._\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["## Execute as a markdown cell\n","\n","| Country Name | Capital |\n","| -------------| ------ |\n","| United States | Washington DC |\n","| Australia | Canberra |\n","| India | New Delhi |"]},{"cell_type":"markdown","metadata":{},"source":["A table is created with \u003ccode\u003e1\u003c/code\u003e heading row, \u003ccode\u003e3\u003c/code\u003e body rows, and \u003ccode\u003e2\u003c/code\u003e columns.\n"]},{"cell_type":"markdown","metadata":{},"source":["# Exercise 4 \n","\n","### Create ordered and unordered lists in Markdown\n","\n","#### Unordered List\n","\n","An unordered list is also referred to as a **bulleted list**.\n","\n","You can create an unordered list by add **dashes (-), asterisks (*), or plus signs (+)** in front of line items.\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/unordered.png\"\u003e\n","\n","_Convert the code cell below to a markdown cell. Then recreate the unordered list displayed above using **dashes (-), asterisks (*),** and **plus signs (+).** Then execute the code._\n"]},{"cell_type":"code","execution_count":4,"metadata":{"trusted":true},"outputs":[{"ename":"\u003cclass 'SyntaxError'\u003e","evalue":"invalid syntax (\u003cipython-input-4-bdc94563f547\u003e, line 2)","output_type":"error","traceback":["\u001b[0;36m  Cell \u001b[0;32mIn [4], line 2\u001b[0;36m\u001b[0m\n\u001b[0;31m    - First item using dashes\u001b[0m\n\u001b[0m            ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}],"source":["# Execute as a markdown cell\n","- First item using dashes\n","- Second item using dashes\n","- Third item using dashes\n","- Fourth item using dashes\n","\n","* First item using asterisks\n","* Second item using asterisks\n","* Third item using asterisks\n","* Fourth item using asterisks\n","\n","+ First item using plus\n","+ Second item using plus\n","+ Third item using plus\n","+ Fourth item using plus"]},{"cell_type":"markdown","metadata":{},"source":["\n","#### Ordered List\n","\n","We can create an ordered list by adding line items with **numbers** followed by **periods**.\n","\n"," \u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/list.png\"\u003e\n","\n","_Convert the code cell below to a markdown cell. Then recreate the ordered list displayed above and execute the code._\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["# Execute as a markdown cell\n","1. First item\n","2. Second item\n","3. Third item\n","4. Fourth item\n"]},{"cell_type":"markdown","metadata":{},"source":["# Practice Exercises\n","\n","### Demonstrate your proficiency in using Markdown in Jupyter notebooks\n"]},{"cell_type":"markdown","metadata":{},"source":["#### Task 1: Create **H2 level heading** as **Welcome to Python programming** and add the image from the following **url** with alt text as **This is SN labs New Launcher**\n","\n","_https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/Launcher.png_\n"]},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":["## Write your markdown here"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","```python\n","## Welcome to Python programming\n","Launcher:![This is SN labs New Launcher](https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/Launcher.png)\n","\n","```\n","Output look as:\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/Launcheroutput.png\"\u003e\n","\n","\u003c/details\u003e\n","\n"]},{"cell_type":"markdown","metadata":{},"source":["#### Task 2: Create a hyperlink to \u003ccode\u003ehttps://www.coursera.org/learn/open-source-tools-for-data-science/home\u003c/code\u003e with the **Name of the link** as \"Tools For Data Science\".\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["# Write your markdown here"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","```\n","\u003ca href =\"https://www.coursera.org/learn/open-source-tools-for-data-science/home/\"\u003eTools For Data Science\u003c/a\u003e \n","    \n","```\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["#### Task 3: Create the following table:\n","\n"," \u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/table.png\"\u003e\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["# Write your markdown here"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","```\n","|Fruits | Quantity(Kg) | Price(In Rupee) | \n","| ------ | ------ | ------ | \n","| Apple | 2 |500|\n","|Orange | 1 |200|\n","| Mango | 3 |1000|\n","| Grapes | 2 |400|\n","\n","    \n","```\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["#### Task 4: Create the following ordered list:\n","\n","\u003cimg src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DS0105EN-SkillsNetwork/labs/Labs_V4/images/order1.png\"\u003e\n"]},{"cell_type":"code","execution_count":null,"metadata":{},"outputs":[],"source":["# Write your markdown here"]},{"cell_type":"markdown","metadata":{},"source":["\u003cdetails\u003e\u003csummary\u003eClick here for the solution\u003c/summary\u003e\n","\n","```\n","1. Python\n","2. Java\n","3. C++\n","4. C   \n","```\n","\n","\u003c/details\u003e\n"]},{"cell_type":"markdown","metadata":{},"source":["_You can find more rules for Markdown formatting in this Markdown Cheatsheet: https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet_\n"]},{"cell_type":"markdown","metadata":{},"source":["###  Thank you for completing this lab!\n","\n"]},{"cell_type":"markdown","metadata":{},"source":["## Author\n","\n","[Lakshmi Holla](https://www.linkedin.com/in/lakshmi-holla-b39062149/?utm_medium=Exinfluencer\u0026utm_source=Exinfluencer\u0026utm_content=000026UJ\u0026utm_term=10006555\u0026utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkDS0105ENSkillsNetwork984-2022-01-01) \n","\n","[Malika Singla](https://www.linkedin.com/in/malika-goyal-04798622/?utm_medium=Exinfluencer\u0026utm_source=Exinfluencer\u0026utm_content=000026UJ\u0026utm_term=10006555\u0026utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkDS0105ENSkillsNetwork984-2022-01-01)\n","\n","\n","## Change Log\n","\n","| Date (YYYY-MM-DD) | Version | Changed By | Change Description                 |\n","| ----------------- | ------- | ---------- | ---------------------------------- |\n","| 2022-09-30        | 0.1     | Lakshmi Holla     | Created Initial version    |\n","\n","\n","## \u003ch3 align=\"center\"\u003e © IBM Corporation 2022. All rights reserved. \u003ch3/\u003e\n"]}],"metadata":{"kernelspec":{"display_name":"Python","language":"python","name":"conda-env-python-py"},"language_info":{"name":""}},"nbformat":4,"nbformat_minor":4}